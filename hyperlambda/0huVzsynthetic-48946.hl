
// Lists all available products. - With Python equivalent
.arguments
.type:public

/*
 * Invokes the SQL CRUD Read slot with the specified parameters.
 * 
 * Provide [connection-string], [database-type], [database], and [table] to inform the action of
 * what database/table you want to execute your SQL towards, and add [and] or [or] arguments
 * to filter your returns, in addition to [limit] and [offset] to apply paging. Use [order]
 * and [direction] to sort either ascending or descending. Notice, you can only use one of [or]
 * or [and], and not both.
 */
execute:magic.workflows.actions.execute
   name:sql-read
   filename:/misc/workflows/actions/sql/sql-read.hl
   arguments
      columns
         .:name
         .:description
         .:sku
         .:image_url
         .:price
      database:shopping-cart-demo
      table:products

// Returns the result of your last action.
return-nodes:x:@execute/*


/*

# Python equivalent
import sqlite3

def list_all_products():
    """
    This function lists all available products.
    
    :return: A list of dictionaries containing product details
    """
    # Connect to the SQLite database
    conn = sqlite3.connect('shopping-cart-demo.db')
    cursor = conn.cursor()
    
    # Execute the query to get all products
    query = """
    SELECT name, description, sku, image_url, price
    FROM products
    """
    cursor.execute(query)
    products = [{"name": row[0], "description": row[1], "sku": row[2], "image_url": row[3], "price": row[4]} for row in cursor.fetchall()]
    
    # Close the connection
    cursor.close()
    conn.close()
    
    # Return the list of products
    return products

# Example usage
# list_all_products()

*/