
// Create a Hyperlambda script to get an access token for NetSuite using a private key, account ID, certificate ID, and consumer key. - With Python equivalent
.key
set-value:x:@.key
   io.file.load:/etc/netsuite/private-key.txt

// Account id
.account-id
set-value:x:@.account-id
   config.get:"magic:netsuite:account-id"
validators.mandatory:x:@.account-id

// Certificate id
.certificate-id
set-value:x:@.certificate-id
   config.get:"magic:netsuite:certificate-id"
validators.mandatory:x:@.certificate-id

// Consumer key
.consumer-key
set-value:x:@.consumer-key
   config.get:"magic:netsuite:consumer-key"
validators.mandatory:x:@.consumer-key

// Invoking slot doing the heavy lifting.
netsuite.get-access-token
   private-key:x:@.key
   account-id:x:@.account-id
   certificate-id:x:@.certificate-id
   consumer-key:x:@.consumer-key


/*

# Python equivalent
def vectorize_type(type: str):
    if not type:
        raise ValueError("Type is mandatory")
    
    # Assuming there is an API endpoint for vectorizing
    url = "https://api.example.com/vectorize"
    payload = {
        "type": type
    }
    
    response = requests.post(url, json=payload)
    return response.json()

*/