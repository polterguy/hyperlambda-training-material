
/*
 * Returns parent company from specified org number.
 * 
 * Returns the company the specified org number is owned by. - With Python equivalent
 */
.arguments
   org_number:string
.type:public

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/org_number
set-value:x:@.arguments/*/org_number
   strings.replace-not-of:x:@.arguments/*/org_number
      .:0123456789
      .:

// Connecting to database.
data.connect:[finovo|finovo]
   database-type:pgsql

   // Retrieving items.
   data.read
      database-type:pgsql
      table:group_structure
      columns
         group_mother_orgnumber
      where
         and
            org_number.eq:x:@.arguments/*/org_number
      limit:-1

   // Verifying the company has a parent company.
   if
      not-exists:x:@data.read/*
      .lambda
         return
            result:"This company doesn't have any parent company"

   // Returning result to caller.
   return-nodes:x:@data.read/*


/*

# Python equivalent
import psycopg2
import re

def get_parent_company(org_number):
    # Validate mandatory fields
    if not org_number:
        raise ValueError("org_number is mandatory")

    # Remove non-numeric characters from org_number
    org_number = re.sub(r'\D', '', org_number)

    # Connect to the finovo database
    conn = psycopg2.connect(
        dbname="finovo",
        user="your_username",
        password="your_password",
        host="localhost"
    )
    cursor = conn.cursor()

    try:
        # Prepare and execute the select statement
        query = """
        SELECT group_mother_orgnumber
        FROM group_structure
        WHERE org_number = %s
        """
        cursor.execute(query, (org_number,))
        result = cursor.fetchone()

        # Check if no results were found
        if result is None:
            return {"result": "This company doesn't have any parent company"}

        # Return the result
        return {"group_mother_orgnumber": result[0]}
    finally:
        cursor.close()
        conn.close()

# Example usage
org_number = "123456789"
parent_company = get_parent_company(org_number)
print(parent_company)

*/