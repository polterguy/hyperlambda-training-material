
/*
 * Counts usage of slots in our training material
 * 
 * Returns all slots, and how many times each slot is mentioned in training material
 */
.arguments
.type:public

// Used as buffer to hold result.
.result

// Fetching vocabulary of server.
vocabulary

// Iterating through each slot
for-each:x:@vocabulary/*

   // Executing file that actually counts how many instances we can find of slot.
   execute-file:/modules/fine-tune-hyperlambda/api/hyperlambda-search-count.get.hl
      query:x:@.dp/#

   // Adding result of above invocation to [.result] folder.
   set-name:x:+/+/*/*
      get-value:x:@.dp/#
   unwrap:x:+/*/*
   add:x:@.result
      .
         .:x:@execute-file/*/count

// Sorting result.
sort:x:@.result/*
   if
      lt:x:@.lhs/#
         get-value:x:@.rhs/#
      .lambda
         set-value:x:@.result
            .:int:-1
   else-if
      mt:x:@.lhs/#
         get-value:x:@.rhs/#
      .lambda
         set-value:x:@.result
            .:int:1
   else
      set-value:x:@.result
         .:int:0

// Returning result to caller.
return-nodes:x:@sort/*
