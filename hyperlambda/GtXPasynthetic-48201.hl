
// Generate Hyperlambda endpoint that returns a specified file to caller as raw text. If the file doesn't exist it should throw a 404 exception. - With Python equivalent
.arguments
   file:string
if
   not
      io.file.exists:x:@.arguments/*/file
   .lambda
      throw:File not found
         status:int:404
         public:bool:true
io.file.load:x:@.arguments/*/file
response.headers.set
   Content-Type:text/plain
return-value:x:@io.file.load

// Save this file for instance as '/modules/YOUR_MODULE/load-file.get.hl', and pass in file as a QUERY parameter


/*

# Python equivalent
import os

def get_file_content(file_path):
    # Check if the file exists
    if not os.path.exists(file_path):
        raise FileNotFoundError("File not found")

    # Load the file content
    with open(file_path, 'r') as file:
        content = file.read()

    # Set the response headers
    response_headers = {"Content-Type": "text/plain"}

    return content, response_headers

# Example usage
file_path = "example.txt"
try:
    content, headers = get_file_content(file_path)
    print(content)  # Output: Content of the file
    print(headers)  # Output: {'Content-Type': 'text/plain'}
except FileNotFoundError as e:
    print(e)  # Output: "File not found"

*/