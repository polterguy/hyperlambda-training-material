
/*
 * This file returns all companies that the specified director is associated with
 * 
 * director_id is an integer and a mandatory object - With Python equivalent
 */
.arguments
   director_id:long
   limit:long
   offset:long

// Opening database connection.
data.connect:[finovo|finovo]
   database-type:pgsql

   // Reading from directors.
   data.select:"\nselect d1.org_number, b.company_name, d1.role_name\n   from directors d1\n      inner join basic b on b.org_number = d1.org_number\n      inner join directors d2 on d1.director_nbr = d2.director_nbr\n   where d2.director_id = @id and d1.org_number != d2.org_number\n   limit @limit offset @offset"
      database-type:pgsql
      @id:x:@.arguments/*/director_id
      @limit:x:@.arguments/*/limit
      @offset:x:@.arguments/*/offset
   if
      mte
         get-count:x:@data.select/*
         .:int:10
      .lambda

         // Making sure we inform caller that there might exist additional companies.
         add:x:@data.connect/*/yield
            .
               notice:The director is probably associated with more companies
   yield
      companies:x:@data.select/*


/*

# Python equivalent
import psycopg2

def get_director_companies(director_id, limit, offset):
    # Connect to the finovo database
    conn = psycopg2.connect(
        dbname="finovo",
        user="your_username",
        password="your_password",
        host="localhost"
    )
    cursor = conn.cursor()

    try:
        # Prepare and execute the select statement
        query = """
        SELECT d1.org_number, b.company_name, d1.role_name
        FROM directors d1
        INNER JOIN basic b ON b.org_number = d1.org_number
        INNER JOIN directors d2 ON d1.director_nbr = d2.director_nbr
        WHERE d2.director_id = %s AND d1.org_number != d2.org_number
        LIMIT %s OFFSET %s
        """
        cursor.execute(query, (director_id, limit, offset))
        companies = cursor.fetchall()

        # Check if there might be more companies
        if len(companies) >= 10:
            print("Notice: The director is probably associated with more companies")

        return companies
    finally:
        cursor.close()
        conn.close()

# Example usage
companies = get_director_companies(1, 10, 0)
for company in companies:
    print(company)

*/