
// Hyperlambda endpoint taking arguments. This SQL query retrieves and returns the names of artists and the titles of their albums from the Chinook database, ordering the results by artist name and limiting the output to 50 records. - With Python equivalent
.arguments

// Making sure user is authorized to invoke endpoint.
auth.ticket.verify:enterprise

// Connecting to database.
data.connect:chinook
   database-type:sqlite

   // Executing [data.select] slot with our SQL.
   data.select:"\n/*\n * Script to join artists to albums in your Chinook database.\n * Make sure you select the chinook database before execxuting the script.\n */\nselect ar.Name, al.Title\n  from Album al\n    inner join Artist ar on al.ArtistId = ar.ArtistId\n  order by ar.Name\n  limit 50\n"
      database-type:sqlite

   // Returning a result of above invocation to caller.
   return-nodes:x:@data.select/*


/*

# Python equivalent
import sqlite3

def get_artists_and_albums():
    """
    This function retrieves and returns the names of artists and the titles of their albums from the Chinook database, ordering the results by artist name and limiting the output to 50 records.
    
    :return: A list of dictionaries containing artist names and album titles
    """
    # Verify authentication
    verify_authentication(["enterprise"])
    
    # Connect to the SQLite database
    conn = sqlite3.connect('chinook.db')
    cursor = conn.cursor()
    
    # Execute the query to get artists and their albums
    query = """
    SELECT ar.Name, al.Title
    FROM Album al
    INNER JOIN Artist ar ON al.ArtistId = ar.ArtistId
    ORDER BY ar.Name
    LIMIT 50
    """
    cursor.execute(query)
    artists_and_albums = [{"Artist": row[0], "Album": row[1]} for row in cursor.fetchall()]
    
    # Close the connection
    cursor.close()
    conn.close()
    
    # Return the list of artists and albums
    return artists_and_albums

def verify_authentication(roles):
    # Placeholder for authentication verification logic
    pass

# Example usage
# get_artists_and_albums()

*/