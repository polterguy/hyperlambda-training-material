
// Generate a Hyperlambda snippet that evaluates payment methods using a switch case with a default option. - With Python equivalent

// Switch case comparison for payment methods.
.payment_method:PayPal
.result
switch:x:@.payment_method
   case:CreditCard

      // If payment method is CreditCard.
      set-value:x:@.result
         .:Paid with Credit Card
   case:PayPal

      // If payment method is PayPal.
      set-value:x:@.result
         .:Paid with PayPal
   case:Crypto

      // If payment method is Crypto.
      set-value:x:@.result
         .:Paid with Cryptocurrency
   default

      // If the payment method is unknown.
      set-value:x:@.result
         .:Unknown payment method


/*

# Python equivalent
import logging
import threading
import time

logging.basicConfig(level=logging.INFO)

def task1():
    logging.info("Logging task 1 started")
    time.sleep(0.5)
    logging.info("Logging task 1 completed")

def task2():
    logging.info("Logging task 2 started")
    time.sleep(1)
    logging.info("Logging task 2 completed")

thread1 = threading.Thread(target=task1)
thread2 = threading.Thread(target=task2)

thread1.start()
thread2.start()

thread1.join()
thread2.join()

*/