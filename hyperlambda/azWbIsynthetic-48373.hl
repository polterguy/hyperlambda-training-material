
// Develop a function to delete an existing Stripe subscription using a specified subscription ID. The function should validate the subscription ID, retrieve the Stripe API token, and construct the appropriate REST URL. It should make a DELETE request to the Stripe API to remove the subscription. Handle any errors by logging and throwing exceptions to ensure robust error management. - With Python equivalent
.arguments
   subscription_id
      type:string
      mandatory:bool:true
.icon:payment

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/subscription_id

// Retrieving token to use for invocations towards Stripe.
.token
set-value:x:-
   strings.concat
      .:"Bearer "
      config.get:"magic:stripe:token"

// Creating our REST URL.
.url
set-value:x:@.url
   strings.concat
      .:"https://api.stripe.com/v1/subscriptions/"
      get-value:x:@.arguments/*/subscription_id

// Invoking Stripe REST API.
http.delete:x:@.url
   headers
      Authorization:x:@.token
   convert:true

// Sanity checking above invocation.
if
   mte
      get-value:x:@http.delete
      .:int:400
   .lambda

      // Oops, something went wrong ...!!
      lambda2hyper:x:@http.post
      log.error:Something went wrong while invoking Stripe API to delete subscription
         result:x:@lambda2hyper
         provider:Stripe
      throw:Something went wrong while invoking Stripe API to delete subscription
         public:true
         status:500


/*

# Python equivalent
import logging

def demonstrate_try_catch_finally():
    logging.basicConfig(level=logging.INFO)
    
    try:
        raise Exception("Some error is thrown here")
    except Exception as e:
        logging.info(f"Caught an exception: {str(e)}")
    finally:
        logging.info("Try finished evaluating")

# Example usage
demonstrate_try_catch_finally()

*/