
// Searches for the specified [query] through your training snippets and returns [max_tokens] training snippets to caller.
.arguments
   _type:string

   // Mandatory argument and become an SQL LIKE condition records must match to be considered.
   query:string

   // Optional argument being maximum number of tokens to return. Will default to 4000 if not specified.
   max_tokens:int
.type:public

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/_type
validators.mandatory:x:@.arguments/*/query

// Applying defaults.
validators.default:x:@.arguments
   max_tokens:int:4000

// Opening up our database connection.
data.connect:[generic|magic]

   // Creating our filter string
   .filter
   set-value:x:@.filter
      strings.concat
         .:%
         get-value:x:@.arguments/*/query
         .:%
   data.read
      table:ml_training_snippets
      columns
         id
         prompt
         uri
      where
         or
            prompt.like:x:@.filter
            completion.like:x:@.filter
   .cont:bool:true
   while:x:@.cont
      lambda2hyper:x:@data.read/*
      if
         lt
            openai.tokenize:x:@lambda2hyper
            convert:x:@.arguments/*/max_tokens
               type:int
         .lambda
            set-value:x:@.cont
               .:bool:false
      else
         remove-nodes:x:@data.read/0/-
   return-nodes:x:@data.read/*
