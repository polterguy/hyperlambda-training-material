
/*
 * Returns a stacked chart image to caller.
 * 
 * Values is a mandatory comma separated list of values.
 */
.arguments:*
.type:public

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/legend

// Creating our individual bars.
.bars
for-each:x:@.arguments/*
   get-name:x:@.dp/#
   if
      not
         strings.starts-with:x:@get-name
            .:legend
      .lambda

         // Adding primary node for bar.
         set-name:x:+/*/*
            get-value:x:@get-name
         add:x:@.bars
            .
               .

         // Adding values for individual cells.
         add:x:@.bars/0/-
            strings.split:x:@.dp/#
               .:,

// Creating our legend.
add:x:../*/image.chart/*/legend
   strings.split:x:@.arguments/*/legend
      .:,

// Parametrizing [image.chart] invocation.
add:x:../*/image.chart/*/bars
   get-nodes:x:@.bars/*
image.chart:stacked
   width:800
   height:500
   bars
   legend

// Applying correct HTTP header.
response.headers.set
   Content-Type:image/png

// Returning chart to caller.
return:x:@image.chart
