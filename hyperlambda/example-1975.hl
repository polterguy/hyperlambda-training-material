
/*
 * Slot for sending user an email with the embed code
 * and the example page when user has made a purchased.
 */
slots.create:wl.email.send-purchase

   // Sanity checking invocation.
   validators.mandatory:x:@.arguments/*/name
   validators.mandatory:x:@.arguments/*/email
   validators.email:x:@.arguments/*/email

   // Creating our email body.
   .body
   set-value:x:@.body
      io.file.load:/etc/wl/plan-purchased.html

   // Replacing template fields.
   set-value:x:@.body
      strings.replace:x:@.body
         .:{{name}}
         get-value:x:@.arguments/*/name

   // Doing some logging.
   log.info:Sending purchase email to user
      name:x:@.arguments/*/name
      email:x:@.arguments/*/email

   // Sending email.
   .subject
   set-value:x:@.subject
      get-first-value
         config.get:"magic:white-label:email-subject"
         .:"Welcome as a New Customer of AINIRO ðŸ¥³"
   .from-email
   set-value:x:@.from-email
      config.get:"magic:smtp:from:address"
   .from-name
   set-value:x:@.from-name
      config.get:"magic:smtp:from:name"
   unwrap:x:+/**
   mail.smtp.send
      message
         to
            .
               name:x:@.arguments/*/name
               email:x:@.arguments/*/email
         subject:x:@.subject
         entity:text/html
            content:x:@.body

   // Sending setup email to team@ainiro.io
   strings.concat
      .:"Type: "
      get-value:x:@.arguments/*/type
      .:", OpenAI API key: "
      get-value:x:@.arguments/*/api_key
      .:", Email: "
      get-value:x:@.arguments/*/email
      .:", Name: "
      get-value:x:@.arguments/*/name
      .:", Plan: "
      get-value:x:@.arguments/*/plan
   unwrap:x:+/**
   mail.smtp.send
      message
         to
            .
               name:x:@.from-name
               email:x:@.from-email
         subject:"DING! Incoming sale! ðŸ¥³"
         entity:text/plain
            content:x:@strings.concat
         
