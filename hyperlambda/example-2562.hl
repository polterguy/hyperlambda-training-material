
/*
 * Slot for sending user an email with the embed code
 * and the example page when a demo has been created.
 */
slots.create:wl.email.send-create

   // Sanity checking invocation.
   validators.mandatory:x:@.arguments/*/url
   validators.mandatory:x:@.arguments/*/type
   validators.mandatory:x:@.arguments/*/host
   validators.mandatory:x:@.arguments/*/name
   validators.mandatory:x:@.arguments/*/email
   validators.email:x:@.arguments/*/email

   // Figuring out base URL of cloudlet.
   .scheme
   if
      strings.contains:x:@.arguments/*/host
         .:localhost
      .lambda
         set-value:x:@.scheme
            .:"http://"
   else
      set-value:x:@.scheme
         .:"https://"

   // Figuring out full path to example page.
   .demo-url
   set-value:x:@.demo-url
      strings.concat
         get-value:x:@.scheme
         get-value:x:@.arguments/*/host
         .:/
         get-value:x:@.arguments/*/type
         .:.html

   // Figuring out header to use for bot.
   .header
   set-value:x:@.header
      get-first-value
         config.get:"magic:white-label:default-header"
         .:Ask about our products or services
   set-value:x:@.header
      strings.url-encode:x:@.header

   // Raw embed code.
   .embed-code-default:@"&lt;script src=""{{base-url}}/magic/system/openai/include-chatbot.js?theme=modern-bubbles&type={{type}}&header={{header}}&button=AI%20Chatbot&color=%23fefefe&start=%237892e5&end=%23142660&link=%23fe8464&v=18.2.1"" defer &gt;&lt;/script&gt;"

   // Creating custom embed code.
   set-value:x:@.embed-code-default
      strings.replace:x:@.embed-code-default
         .:{{base-url}}
         strings.concat
            get-value:x:@.scheme
            get-value:x:@.arguments/*/host
   set-value:x:@.embed-code-default
      strings.replace:x:@.embed-code-default
         .:{{type}}
         get-value:x:@.arguments/*/type
   set-value:x:@.embed-code-default
      strings.replace:x:@.embed-code-default
         .:{{header}}
         get-value:x:@.header

   // Creating our email body.
   .body
   set-value:x:@.body
      io.file.load:/etc/wl/bot-created.html

   // Replacing template fields.
   set-value:x:@.body
      strings.replace:x:@.body
         .:{{demo-url}}
         get-value:x:@.demo-url
   set-value:x:@.body
      strings.replace:x:@.body
         .:{{name}}
         get-value:x:@.arguments/*/name
   set-value:x:@.body
      strings.replace:x:@.body
         .:{{type}}
         get-value:x:@.arguments/*/type
   set-value:x:@.body
      strings.replace:x:@.body
         .:{{embed-code}}
         get-value:x:@.embed-code-default

   // Doing some logging.
   log.info:Sending demo chatbot on email to user
      name:x:@.arguments/*/name
      email:x:@.arguments/*/email

   // Sending email.
   .subject
   set-value:x:@.subject
      get-first-value
         config.get:"magic:white-label:email-subject"
         .:"Your ChatGPT website chatbot is ready ðŸŽ‰"
   .from-email
   set-value:x:@.from-email
      config.get:"magic:smtp:from:address"
   .from-name
   set-value:x:@.from-name
      config.get:"magic:smtp:from:name"
   unwrap:x:+/**
   mail.smtp.send
      message
         to
            .
               name:x:@.arguments/*/name
               email:x:@.arguments/*/email
         cc
            .
               name:x:@.from-name
               email:x:@.from-email
         subject:x:@.subject
         entity:text/html
            content:x:@.body
         
