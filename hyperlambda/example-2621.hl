
// Hyperlambda endpoint taking arguments. The SQL query retrieves distinct customer details who have purchased tracks from the "Rock" genre.\n\nThe SQL code connects to the Chinook database and executes a query that selects distinct email addresses, first names, last names, and genre names of customers who have purchased tracks classified under the "Rock" genre. It achieves this by joining the Customer, Invoice, InvoiceLine, Track, and Genre tables on their respective keys, filtering the results to include only those where the genre name is "Rock". The results are ordered by the customer's email address. This query is useful for identifying and analyzing the customer base interested in rock music, which can be leveraged for targeted marketing or customer relationship management initiatives.
.arguments

// Connecting to database.
data.connect:chinook
   database-type:sqlite

   // Executing [data.select] slot with our SQL.
   data.select:"\n/*\n * Selects details from all customers that are listening to rock.\n * Make sure you select the chinook database before execxuting the script.\n */\nselect distinct c.Email, c.FirstName, c.LastName, g.name\n  from Customer c\n    inner join Invoice i on c.CustomerId = i.CustomerId\n    inner join InvoiceLine ii on i.InvoiceId = ii.InvoiceId\n    inner join Track t ON ii.TrackId = t.TrackId\n    inner join Genre g ON t.GenreId = g.GenreId\n  where g.Name = \"Rock\"\n  order by c.Email\n"
      database-type:sqlite

   // Returning a result of above invocation to caller.
   return-nodes:x:@data.select/*
