
// Associates the specified [username] with the specified [roles] roles.
.arguments
   username
      type:string
      mandatory:bool:true
   roles
      type:array
      mandatory:bool:true
.icon:supervisor_account

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/username
validators.mandatory:x:@.arguments/*/roles

// Connecting to database.
data.connect:[generic|magic]

   // Verifying user exists.
   data.read
      table:users
      columns
         username
      where
         and
            username.eq:x:@.arguments/*/username

   // Verifying above invocation returned something.
   if
      not-exists:x:@data.read/*
      .lambda

         // Oops ...!!
         throw:No such user
            username:x:@.arguments/*/username

   // Removing all roles user is already associated with.
   data.delete
      table:users_roles
      where
         and
            user.eq:x:@.arguments/*/username

   // Associating user with specified [roles].
   for-each:x:@.arguments/*/roles/*
      data.create
         table:users_roles
         values
            user:x:@.arguments/*/username
            role:x:@.dp/#
