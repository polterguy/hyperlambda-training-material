
// Create a function to initiate a new Stripe payment for a specified customer using a payment method, amount, and currency. The function should validate all mandatory arguments and retrieve the Stripe API token. It should handle metadata, multiply the amount by 100 to remove decimals, and include optional descriptions and return URLs. The function should make a POST request to create a payment intent, handle errors by logging and throwing exceptions, and check if the charge was successful. If not, it should return a URL for 3D secure authentication. Otherwise, return the payment ID to the caller.
.arguments
   customer_id
      type:string
      mandatory:bool:true
   payment_method_id
      type:string
      mandatory:bool:true
   amount
      type:decimal
      mandatory:bool:true
   currency
      type:string
      mandatory:bool:true
      default:usd
   description
      type:string
      mandatory:bool:false
   return_url
      type:string
      mandatory:bool:false
   metadata
      type:key-value
.icon:payment

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/customer_id
validators.mandatory:x:@.arguments/*/payment_method_id
validators.mandatory:x:@.arguments/*/amount
validators.mandatory:x:@.arguments/*/currency

// Adding metadata.
for-each:x:@.arguments/*/metadata/*
   set-name:x:./0/-/*/*
      strings.concat
         .:metadata[
         get-name:x:@.dp/#
         .:]
   unwrap:x:./0/-/*/*
   add:x:../*/http.post/*/payload
      .
         name:x:@.dp/#

// Retrieving token to use for invocations towards Stripe.
.token
set-value:x:-
   strings.concat
      .:"Bearer "
      config.get:"magic:stripe:token"

// Multiplying [amount] with 100 to correctly remove decimals.
math.multiply:x:@.arguments/*/amount
   .:decimal:100
convert:x:@math.multiply
   type:int

// Adding description if caller provided it.
add:x:./*/http.post/*/payload
   get-nodes:x:@.arguments/*/description
   get-nodes:x:@.arguments/*/return_url

// Invoking Stripe REST API.
http.post:"https://api.stripe.com/v1/payment_intents"
   headers
      Content-Type:application/x-www-form-urlencoded
      Authorization:x:@.token
   payload
      amount:x:@convert
      currency:x:@.arguments/*/currency
      payment_method:x:@.arguments/*/payment_method_id
      customer:x:@.arguments/*/customer_id
      confirm:bool:true
   convert:true

// Sanity checking above invocation.
if
   mte
      get-value:x:@http.post
      .:int:400
   .lambda

      // Oops, something went wrong ...!!
      lambda2hyper:x:@http.post
      log.error:Something went wrong while invoking Stripe API, could not create payment intent
         result:x:@lambda2hyper
         provider:Stripe
      throw:Something went wrong while invoking Stripe API, could not create payment intent
         public:true
         status:500

// Checking if charge was successful.
if
   exists:x:@http.post/*/content/*/next_action/*/use_stripe_sdk/*/stripe_js
   .lambda

      // Charge was NOT successful, and probably needs 3D secure.
      yield
         finished:bool:false
         id:x:@http.post/*/content/*/id
         payment_url:x:@http.post/*/content/*/next_action/*/use_stripe_sdk/*/stripe_js

// Returning customer ID to caller.
yield
   finished:bool:true
   payment_id:x:@http.post/*/content/*/id
