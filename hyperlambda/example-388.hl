
// Executing the following Hyperlambda results in the following

// When executing the following Hyperlambda
.folder:/system/
.loc:int:0
.files:int:0
unwrap:x:+/*
signal:magic.io.file.load-recursively
   .:x:@.folder
for-each:x:@signal/*
   if
      strings.ends-with:x:@.dp/#
         .:.hl
      .lambda
         hyper2lambda:x:@.dp/#/0
         math.increment:x:@.loc
            get-count:x:@hyper2lambda/**
         math.increment:x:@.files
remove-nodes:x:@signal/*

// We end up with this result
.folder:/system/
.loc:int:19696
.files:int:292
unwrap:x:+/*
signal
for-each:x:@signal/*
   if
      strings.ends-with:x:@.dp/#
         .:.hl
      .lambda
         hyper2lambda:x:@.dp/#/0
         math.increment:x:@.loc
            get-count:x:@hyper2lambda/**
         math.increment:x:@.files
remove-nodes:x:@signal/*

// Above you can see how executing Hyperlambda transforms the original node hierarchy, changing it, allowing us to store state in nodes
