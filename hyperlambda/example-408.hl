
// Create a Hyperlambda action script to send an email with mandatory fields 'name', 'email', 'subject', and 'body'. Optionally include 'from', 'from-email', 'reply-to', and 'reply-to-email'. Validate email formats and set defaults for HTML content.
.arguments

   // Notice, this is action syntax for arguments.
   name
      type:string
      mandatory:bool:true
   email
      type:email
      mandatory:bool:true
   from
      type:string
      mandatory:bool:false
   from-email
      type:email
      mandatory:bool:false
   reply-to
      type:string
      mandatory:bool:false
   reply-to-email
      type:email
      mandatory:bool:false
   subject
      type:string
      mandatory:bool:true
   body
      type:textarea
      mandatory:bool:true
   html
      type:bool
      default:bool:true
.icon:email

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/name
validators.mandatory:x:@.arguments/*/email
validators.email:x:@.arguments/*/email
validators.mandatory:x:@.arguments/*/subject
validators.mandatory:x:@.arguments/*/body
validators.email:x:@.arguments/*/from-email
validators.email:x:@.arguments/*/reply-to-email

// Applying defaults.
validators.default:x:@.arguments
   html:bool:false

// Making sure we send email as HTML if we should.
if
   get-value:x:@.arguments/*/html
   .lambda

      // Making sure MIME message becomes HTML Content-Type.
      set-value:x:../*/mail.smtp.send/**/entity
         .:text/html

// Checking if we've got an explicit [from] and [from-email] argument.
if
   and
      exists:x:@.arguments/*/from
      exists:x:@.arguments/*/from-email
   .lambda

      // Adding explicit from name/address.
      add:x:../*/mail.smtp.send/*/message
         .
            from
               .
                  name:x:@.arguments/*/from
                  email:x:@.arguments/*/from-email

// Checking if we've got an explicit [reply-to] and [reply-to-email] argument.
if
   and
      exists:x:@.arguments/*/reply-to
      exists:x:@.arguments/*/reply-to-email
   .lambda

      // Adding explicit from name/address.
      add:x:../*/mail.smtp.send/*/message
         .
            reply-to
               .
                  name:x:@.arguments/*/reply-to
                  email:x:@.arguments/*/reply-to-email

// Forward evaluating arguments to [mail.smtp.send].
unwrap:x:./*/mail.smtp.send/**

// Sending email.
mail.smtp.send
   message
      to
         .
            name:x:@.arguments/*/name
            email:x:@.arguments/*/email
      subject:x:@.arguments/*/subject
      entity:text/plain
         content:x:@.arguments/*/body
