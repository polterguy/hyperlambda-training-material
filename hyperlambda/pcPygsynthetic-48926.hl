
// Hyperlambda endpoint taking arguments. The SQL query retrieves distinct customer details who have purchased tracks from the "Rock" genre. - With Python equivalent
.arguments

// Connecting to database.
data.connect:chinook
   database-type:sqlite

   // Executing [data.select] slot with our SQL.
   data.select:"\n/*\n * Selects details from all customers that are listening to rock.\n * Make sure you select the chinook database before execxuting the script.\n */\nselect distinct c.Email, c.FirstName, c.LastName, g.name\n  from Customer c\n    inner join Invoice i on c.CustomerId = i.CustomerId\n    inner join InvoiceLine ii on i.InvoiceId = ii.InvoiceId\n    inner join Track t ON ii.TrackId = t.TrackId\n    inner join Genre g ON t.GenreId = g.GenreId\n  where g.Name = \"Rock\"\n  order by c.Email\n"
      database-type:sqlite

   // Returning a result of above invocation to caller.
   return-nodes:x:@data.select/*


/*

# Python equivalent
import sqlite3

def get_rock_genre_customers():
    """
    This function retrieves distinct customer details who have purchased tracks from the "Rock" genre.
    
    :return: A list of dictionaries containing customer details
    """
    # Connect to the SQLite database
    conn = sqlite3.connect('chinook.db')
    cursor = conn.cursor()
    
    # Execute the query to get customers who purchased "Rock" genre tracks
    query = """
    SELECT DISTINCT c.Email, c.FirstName, c.LastName, g.Name
    FROM Customer c
    INNER JOIN Invoice i ON c.CustomerId = i.CustomerId
    INNER JOIN InvoiceLine ii ON i.InvoiceId = ii.InvoiceId
    INNER JOIN Track t ON ii.TrackId = t.TrackId
    INNER JOIN Genre g ON t.GenreId = g.GenreId
    WHERE g.Name = "Rock"
    ORDER BY c.Email
    """
    cursor.execute(query)
    customers = [{"Email": row[0], "FirstName": row[1], "LastName": row[2], "Genre": row[3]} for row in cursor.fetchall()]
    
    # Close the connection
    cursor.close()
    conn.close()
    
    # Return the list of customers
    return customers

# Example usage
# get_rock_genre_customers()

*/