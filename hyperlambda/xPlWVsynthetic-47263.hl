
// Create one record in your category table in your sakila database without authorization. Log invocation. - With Python equivalent
.arguments

   // name column value
   name:string

   // last_update column value
   last_update:date

// Meta data description for endpoint

// Type of endpoint
.type:crud-create

// Logging invocation.
auth.ticket.get
lambda2hyper:x:@.arguments/*
log.info:sakila.category entry created
   username:x:@auth.ticket.get
   arguments:x:@lambda2hyper

// Opening up database connection.
data.connect:[generic|sakila]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:category
      return-id:bool:true
      values

   // Returning the correct status code.
   response.status.set:201

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:sakila.category.post
      args

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      id:x:@data.create


/*

# Python equivalent
import sqlite3
from datetime import datetime

def create_category_record(name, last_update):
    # Log the invocation
    username = get_auth_ticket()
    log_info("sakila.category entry created", username=username, arguments={"name": name, "last_update": last_update})

    # Connect to the sakila database
    conn = sqlite3.connect('sakila.db')
    cursor = conn.cursor()

    try:
        # Prepare and execute the insert statement
        cursor.execute(
            "INSERT INTO category (name, last_update) VALUES (?, ?)",
            (name, last_update)
        )
        conn.commit()

        # Signal the creation
        signal_category_creation(name, last_update)

        # Return the ID of the newly created record
        return cursor.lastrowid
    finally:
        conn.close()

def get_auth_ticket():
    # Dummy function to get auth ticket
    # Replace with actual implementation
    return "dummy_user"

def log_info(message, **kwargs):
    # Dummy function to log information
    # Replace with actual implementation
    print(message, kwargs)

def signal_category_creation(name, last_update):
    # Dummy function to signal category creation
    # Replace with actual implementation
    print(f"Signal: sakila.category.post for name {name} and last_update {last_update}")

*/