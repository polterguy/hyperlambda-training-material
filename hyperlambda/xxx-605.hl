
// Update one record in your Invoice table in your chinook database.
.arguments

   // InvoiceId column value being primary key of record to update, mandatory argument
   InvoiceId:long

   // CustomerId column's new value
   CustomerId:long

   // InvoiceDate column's new value
   InvoiceDate:date

   // BillingAddress column's new value
   BillingAddress:string

   // BillingCity column's new value
   BillingCity:string

   // BillingState column's new value
   BillingState:string

   // BillingCountry column's new value
   BillingCountry:string

   // BillingPostalCode column's new value
   BillingPostalCode:string

   // Total column's new value
   Total:decimal

// Meta data description for endpoint
.description:Update one record in your Invoice table in your chinook database

// Type of endpoint
.type:crud-update

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/InvoiceId

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin

// Opening up our database connection.
data.connect:[generic|chinook]
   database-type:sqlite

   // Parametrising our invocation.
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]

   // Invoking our update slot.
   data.update
      database-type:sqlite
      table:Invoice
      values
      where
         and

   // Verifying record exists.
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found

   // Returning the correct status code.
   response.status.set:202

   // Returning success to caller.
   unwrap:x:+/*
   return
      affected:x:@data.update
